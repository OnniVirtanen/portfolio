{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\35840\\\\source\\\\new_website_ov\\\\personal-website\\\\src\\\\Components\\\\Projects.js\";\nimport \"../Styles/projects.css\";\nimport image_git from \"../Images/github-mark-white.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Projects = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"projects\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"projects-flex-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"projects-flex-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"projects-flex-item-header-and-git\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Encryption tool\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 12,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: image_git\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 13,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"I have made a file encryption tool in Python. It is run through CLI. It uses a tag to check the file's authenticity. I also built nonce to it so even if the key and file was same, the cipher would be unique every time. I wanted to try a real world problem in this project.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n};\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["image_git","Projects"],"sources":["C:/Users/35840/source/new_website_ov/personal-website/src/Components/Projects.js"],"sourcesContent":["import \"../Styles/projects.css\";\r\nimport image_git from \"../Images/github-mark-white.svg\";\r\n\r\nconst Projects = () => {\r\n    return (\r\n        <div className='container'>\r\n            <div className='projects'>\r\n                <h2>Projects</h2>\r\n                <div className='projects-flex-container'>\r\n                    <div className='projects-flex-item'>\r\n                        <div className='projects-flex-item-header-and-git'>\r\n                            <h3>Encryption tool</h3>\r\n                            <img src={image_git}/>\r\n                        </div>\r\n                        <p>I have made a file encryption tool in Python. It is run through CLI. It uses a tag to check the file's authenticity. \r\n                            I also built nonce to it so even if the key and file was same, the cipher would be unique every time.\r\n                            I wanted to try a real world problem in this project.</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Projects;"],"mappings":";AAAA,OAAO,wBAAwB;AAC/B,OAAOA,SAAS,MAAM,iCAAiC;AAAC;AAExD,MAAMC,QAAQ,GAAG,MAAM;EACnB,oBACI;IAAK,SAAS,EAAC,WAAW;IAAA,uBACtB;MAAK,SAAS,EAAC,UAAU;MAAA,wBACrB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAiB,eACjB;QAAK,SAAS,EAAC,yBAAyB;QAAA,uBACpC;UAAK,SAAS,EAAC,oBAAoB;UAAA,wBAC/B;YAAK,SAAS,EAAC,mCAAmC;YAAA,wBAC9C;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAwB,eACxB;cAAK,GAAG,EAAED;YAAU;cAAA;cAAA;cAAA;YAAA,QAAE;UAAA;YAAA;YAAA;YAAA;UAAA,QACpB,eACN;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAE6D;QAAA;UAAA;UAAA;UAAA;QAAA;MAC3D;QAAA;QAAA;QAAA;MAAA,QACJ;IAAA;MAAA;MAAA;MAAA;IAAA;EACJ;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAA,KAnBKC,QAAQ;AAqBd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}